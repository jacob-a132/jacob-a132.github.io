{"version":3,"sources":["Header.js","Home.js","Projects.js","Ref.js","About.js","Time.js","UseScript.js","Snek.js","EasyEstimation/src/CanvasDraw/index.js","EasyEstimation/src/CanvasDraw/drawImage.js","EasyEstimation/src/App.js","RoomLayout/src/CreateObject.js","RoomLayout/src/ObjectQ.js","RoomLayout/src/App.js","App.js","index.js"],"names":["Header","className","to","Component","Home","Projects","Ref","this","props","link","text","href","target","rel","About","alt","width","src","Time","state","time","Date","now","interval","setInterval","setState","clearInterval","d","getHours","getMinutes","getSeconds","overallTime","Math","floor","getSecondsToday","toFixed","useScript","url","useEffect","script","document","createElement","async","body","appendChild","removeChild","Snek","type","id","defaultValue","size","style","isBasic","UseScript","midPointBtw","p1","p2","x","y","canvasStyle","display","position","canvasTypes","name","zIndex","componentWillUnmount","canvasObserver","unobserve","canvasContainer","drawImage","imgSrc","image","Image","crossOrigin","onload","ctx","img","w","h","offsetX","offsetY","canvas","height","cx","cy","cw","ch","iw","ih","r","min","nw","nh","ar","abs","grid","undo","lines","pageNumber","slice","clear","onClear","simulateDrawingLines","immediate","triggerOnChange","changePage","newPage","getSaveData","JSON","stringify","canvasWidth","canvasHeight","loadSaveData","saveData","immediateLoading","Error","parse","push","oldWidth","oldHeight","scaleX","scaleY","scaleAvg","map","line","points","p","brushRadius","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","drawPoints","saveLine","i","window","setTimeout","length","handleDrawStart","e","preventDefault","isPressing","getPointerPos","touches","lazy","update","both","handlePointerMove","handleDrawMove","handleDrawEnd","isDrawing","handleCanvasResize","entries","observer","contentRect","setCanvasSize","interface","drawing","temp","drawGrid","loop","once","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","isDisabled","isEnabled","pop","brush","toObject","mouseHasMoved","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","onLineComplete","onChange","valuesChanged","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","countX","countY","hideInterface","fillStyle","arc","PI","fill","catenaryColor","catenary","drawToCanvas","chainLength","Catenary","1","LazyBrush","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","ResizeObserver","observe","initX","initY","prevProps","setRadius","background","backgroundColor","touchAction","ref","container","isInterface","getContext","onMouseDown","undefined","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","PureComponent","defaultProps","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","App","color","numPages","pdfRealWidth","pdfRealHeight","heightConversion","widthConversion","ductWidth","ductHeight","ready","pdfFileName","pdfFileUrl","scale","allPoints","accessor","setConversion","onDocumentLoadSuccess","getElementById","clientHeight","clientWidth","bind","handleLineDraw","x1","y1","x2","y2","realLength","sqrt","prevState","price","handleClearDrawing","random","toString","allPointsTableData","Object","keys","reduce","k","concat","onClick","saveableCanvas","value","parseInt","max","val","file","onLoadSuccess","canvasDraw","a","b","parseFloat","extensions","FileObject","URL","createObjectURL","onError","errMsg","console","log","pdfRealWifth","CreateObject","useState","setWidth","setHeight","rotate","setRotate","setName","setColor","layer","setLayer","isRound","setIsRound","onClose","onCreate","isUpdate","circleSize","circleSpacing","onChangeComplete","hex","checked","htmlFor","getStyles","inNav","squareSize","styles","transform","borderRadius","getPosition","index","ObjectQ","setInNav","isLocked","setIsLocked","editing","setEditing","onNavAdd","onNavRemove","navIndex","onUpdate","object","onDrag","windowWidth","screenX","handleDrag","handleObjectUpdate","newObj","objects","setObjects","items","getObjects","navArray","setNavArray","objectComps","count","indexOf","objIndex","splice","setScale","setSquareSize","creatingObject","setCreatingObject","context","windowHeight","drawBoard","path","component","exact","EasyEstimation","RoomLayout","ReactDOM"],"mappings":"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","file":"static/js/main.333cf554.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Name\">\n          <span className=\"First\">\n            Jacob\n          </span>\n          <span className=\"Last\">\n            Atzori\n          </span>\n        </div>\n        <div className=\"HeaderLinks\">\n          <div className=\"Link\">\n            <Link to=\"/\">Home</Link>\n          </div>\n          <div className=\"Link\">\n            <Link to=\"/projects\">Projects</Link>\n          </div>\n          <div className=\"Link\">\n            <Link to=\"/about\">About</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"PageTitle\">\n          Home\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div className=\"Projects\">\n        <div className=\"PageTitle\">\n          Projects\n        </div>\n        <div className=\"Link\">\n          <Link to=\"/absolute-time\">Absolute Time</Link>\n        </div>\n        <div className=\"Link\">\n          <Link to=\"/snek\">Snek</Link>\n        </div>\n        <div className=\"Link\">\n          <Link to=\"/snek-ai\">Snek AI</Link>\n        </div>\n        <div className=\"Link\">\n          <Link to=\"/easy-estimation\">Easy Estimation</Link>\n        </div>\n        <div className=\"Link\">\n          <Link to=\"/room-layout\">Room Layout</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\n\nclass Ref extends Component {\n  render() {\n    let { link, text } = this.props;\n    return (\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n       {text}\n      </a>\n    );\n  }\n}\n\nexport default Ref;\n","import React, { Component } from 'react';\nimport Ref from './Ref';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"About\">\n        <div className=\"PageTitle\">\n          About\n        </div>\n        <div className=\"AboutMe\">\n          <div className=\"AboutPicture\">\n            <img alt=\"Jacob Atzori\" width=\"250\" src=\"/Atzori.jpg\" />\n          </div>\n          <div className=\"AboutDescription\">\n            I am a recent graduate from the University of Toronto.  \n            I did my undergraduate in computer sceince and mathematics.  \n            I currently work at <Ref link=\"https://www.ceridian.com/\" text=\"Ceridian HCM\" /> as a software developper.\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport Ref from './Ref';\n\nclass Time extends Component {\n  state = {\n    time: Date.now()\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getSecondsToday() {\n    let { time } = this.state;\n\t  let d = new Date(time);\n\t  return d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds();\n\t}\n\n  render() {\n    let { time } = this.state;\n    let unixDeath = 21474836480;\n    let dayLength = 3600*24;\n    let overallTime = time/unixDeath;\n    return (\n      <div className=\"Time\">\n        <h2>\n          A 'better' way to talk about the time of the day\n        </h2>\n        <div className=\"TimeDescription\">\n          <div>\n            Instead of keeping track of hours, minutes and whether it's AM or PM,\n            we can just keep track of how much of the day has passed as a percentage.\n            For example, at 2:30 PM we are 60.4% through the day, so we can just say the time is 60%\n          </div>\n          <div className=\"TimeContainer\">\n            <span className=\"TimeLabel\">\n              Current Time: \n            </span>\n            <span className=\"CurrentTime\">\n              {Math.floor(10000*this.getSecondsToday()/dayLength)/100}%\n            </span>\n          </div>\n          <div>\n            We can also keep track of the time and date all together in one number instead of using days, months and years.\n            We can instead just say how far through <Ref link=\"https://en.wikipedia.org/wiki/Unix_time\" text=\"Unix Time\" /> we currently are.\n            Unix time started Jan 1 1970, and ends Jan 19 2038,\n            and so the current overall time is just how far through that interval we are.\n          </div>\n          <div className=\"TimeContainer\">\n            <span className=\"TimeLabel\">\n              Overall Time: \n            </span>\n            <span className=\"CurrentTime\">\n              {(overallTime - overallTime % 10**-7).toFixed(7)}%\n            </span>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Time;\n","import { useEffect } from 'react';\n\nconst useScript = url => {\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, [url]);\n};\n\nexport default useScript;","import React from 'react';\nimport UseScript from './UseScript';\n\nconst Snek = (props) =>  {\n  return (\n    <div className=\"Snek\">\n      <h1>Snek</h1>\n      <div className=\"SnekInfoSection\">\n        <span className=\"SnekInfo\">\n          Speed: <input type=\"text\" id=\"speed\" defaultValue=\"10\" size=\"6\" />\n        </span>\n        <span className=\"SnekInfo\" id='score' style={{ 'fontSize' : '130%' }}>\n          Score: 0\n        </span>\n        <button className=\"SnekInfo\" id='resetButton' >\n          reset\n        </button>\n        <span className=\"SnekMsg\" id='msg' style={{ 'fontSize' : '130%' }}></span>\n      </div>\n\n      <table className=\"center\" id={'table'} style={{ 'backgroundColor':' blue' }}></table>\n      {props.isBasic ?\n        <div>\n          <button id=\"classicButton\" type=\"button\" >classic</button>\n          <button id=\"facesButton\" type=\"button\" >faces</button>\n        </div> : <div />\n      }\n\n      { props.isBasic ? UseScript('/snek-basic.js') : UseScript('/snek-ai.js') }\n    </div>\n  );\n}\n\nexport default Snek;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nconst canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\n\nconst canvasTypes = [\n  {\n    name: \"interface\",\n    zIndex: 15\n  },\n  {\n    name: \"drawing\",\n    zIndex: 11\n  },\n  {\n    name: \"temp\",\n    zIndex: 12\n  },\n  {\n    name: \"grid\",\n    zIndex: 10\n  }\n];\n\nconst dimensionsPropTypes = PropTypes.oneOfType([\n  PropTypes.number,\n  PropTypes.string\n]);\n\nexport default class extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func,\n    loadTimeOffset: PropTypes.number,\n    lazyRadius: PropTypes.number,\n    brushRadius: PropTypes.number,\n    brushColor: PropTypes.string,\n    catenaryColor: PropTypes.string,\n    gridColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    hideGrid: PropTypes.bool,\n    canvasWidth: dimensionsPropTypes,\n    canvasHeight: dimensionsPropTypes,\n    disabled: PropTypes.bool,\n    imgSrc: PropTypes.string,\n    saveData: PropTypes.string,\n    immediateLoading: PropTypes.bool,\n    hideInterface: PropTypes.bool\n  };\n\n  static defaultProps = {\n    onChange: null,\n    loadTimeOffset: 5,\n    lazyRadius: 12,\n    brushRadius: 10,\n    brushColor: \"#444\",\n    catenaryColor: \"#0a0302\",\n    gridColor: \"rgba(150,150,150,0.17)\",\n    backgroundColor: \"#FFF\",\n    hideGrid: false,\n    canvasWidth: 400,\n    canvasHeight: 400,\n    disabled: false,\n    imgSrc: \"\",\n    saveData: \"\",\n    immediateLoading: false,\n    hideInterface: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.canvas = {};\n    this.ctx = {};\n\n    this.catenary = new Catenary();\n\n    this.points = [];\n    this.lines = { 1: [] };\n\n    this.mouseHasMoved = true;\n    this.valuesChanged = true;\n    this.isDrawing = false;\n    this.isPressing = false;\n  }\n\n  componentDidMount() {\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver((entries, observer) =>\n      this.handleCanvasResize(entries, observer)\n    );\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(() => {\n      const initX = window.innerWidth / 2;\n      const initY = window.innerHeight / 2;\n      this.lazy.update(\n        { x: initX - this.chainLength / 4, y: initY },\n        { both: true }\n      );\n      this.lazy.update(\n        { x: initX + this.chainLength / 4, y: initY },\n        { both: false }\n      );\n      this.mouseHasMoved = true;\n      this.valuesChanged = true;\n      this.clear();\n\n      // Load saveData from prop if it exists\n      if (this.props.saveData) {\n        this.loadSaveData(this.props.saveData);\n      }\n    }, 100);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  }\n\n  componentWillUnmount = () => {\n    this.canvasObserver.unobserve(this.canvasContainer);\n  };\n\n  drawImage = () => {\n    if (!this.props.imgSrc) return;\n\n    // Load the image\n    this.image = new Image();\n\n    // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n    this.image.crossOrigin = \"anonymous\";\n\n    // Draw the image once loaded\n    this.image.onload = () =>\n      drawImage({ ctx: this.ctx.grid, img: this.image });\n    this.image.src = this.props.imgSrc;\n  };\n\n  undo = () => {\n    const lines = this.props.pageNumber in this.lines && this.lines[this.props.pageNumber].slice(0, -1);\n    this.clear();\n    this.props.onClear && this.props.onClear();\n    this.simulateDrawingLines({ lines, immediate: true });\n    this.triggerOnChange();\n  };\n\n  changePage = (newPage) => {\n    if (!(newPage in this.lines))\n      this.lines[newPage] = [];\n    const lines = this.lines[newPage];\n    this.clear();\n    // this.props.onClear && this.props.onClear();\n    this.simulateDrawingLines({ lines, immediate: true });\n    this.triggerOnChange();\n  }\n\n  getSaveData = () => {\n    // Construct and return the stringified saveData object\n    return JSON.stringify({\n      lines: this.lines[this.props.pageNumber],\n      width: this.props.canvasWidth,\n      height: this.props.canvasHeight\n    });\n  };\n\n  loadSaveData = (saveData, immediate = this.props.immediateLoading) => {\n    if (typeof saveData !== \"string\") {\n      throw new Error(\"saveData needs to be of type string!\");\n    }\n\n    const { lines, width, height } = JSON.parse(saveData);\n\n    if (!lines || typeof lines.push !== \"function\") {\n      throw new Error(\"saveData.lines needs to be an array!\");\n    }\n\n    this.clear();\n    \n    if (\n      this.props.canvasWidth === this.props.oldWidth &&\n      this.props.canvasHeight === this.props.oldHeight\n    ) {\n      this.simulateDrawingLines({\n        lines,\n        immediate\n      });\n    } else {\n      // we need to rescale the lines based on saved & current dimensions\n      const scaleX = this.props.canvasWidth / this.props.oldWidth;\n      const scaleY = this.props.canvasHeight / this.props.oldHeight;\n      const scaleAvg = (scaleX + scaleY) / 2;\n\n      this.simulateDrawingLines({\n        lines: lines.map(line => ({\n          ...line,\n          points: line.points.map(p => ({\n            x: p.x * scaleX,\n            y: p.y * scaleY\n          })),\n          brushRadius: line.brushRadius * scaleAvg\n        })),\n        immediate\n      });\n    }\n  };\n\n  simulateDrawingLines = ({ lines, immediate }) => {\n    // Simulate live-drawing of the loaded lines\n    // TODO use a generator\n    let curTime = 0;\n    let timeoutGap = immediate ? 0 : this.props.loadTimeOffset;\n\n    lines.forEach(line => {\n      const { points, brushColor, brushRadius } = line;\n\n      // Draw all at once if immediate flag is set, instead of using setTimeout\n      if (immediate) {\n        // Draw the points\n        this.drawPoints({\n          points,\n          brushColor,\n          brushRadius\n        });\n\n        // Save line with the drawn points\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n        return;\n      }\n\n      // Use timeout to draw\n      for (let i = 1; i < points.length; i++) {\n        curTime += timeoutGap;\n        window.setTimeout(() => {\n          this.drawPoints({\n            points: points.slice(0, i + 1),\n            brushColor,\n            brushRadius\n          });\n        }, curTime);\n      }\n\n      curTime += timeoutGap;\n      window.setTimeout(() => {\n        // Save this line with its props instead of this.props\n        this.points = points;\n        this.saveLine({ brushColor, brushRadius });\n      }, curTime);\n    });\n  };\n\n  handleDrawStart = e => {\n    e.preventDefault();\n\n    // Start drawing\n    this.isPressing = true;\n\n    const { x, y } = this.getPointerPos(e);\n\n    if (e.touches && e.touches.length > 0) {\n      // on touch, set catenary position to touch pos\n      this.lazy.update({ x, y }, { both: true });\n    }\n\n    // Ensure the initial down position gets added to our line\n    this.handlePointerMove(x, y, false);\n  };\n\n  handleDrawMove = e => {\n    e.preventDefault();\n\n    const { x, y } = this.getPointerPos(e);\n    this.handlePointerMove(x, y, true);\n  };\n\n  handleDrawEnd = e => {\n    e.preventDefault();\n\n    // Draw to this end pos\n    this.handleDrawMove(e);\n\n    // Stop drawing & save the drawn line\n    this.isDrawing = false;\n    this.isPressing = false;\n    this.saveLine();\n  };\n\n  handleCanvasResize = (entries, observer) => {\n    const saveData = this.getSaveData();\n    for (const entry of entries) {\n      const { width, height } = entry.contentRect;\n      this.setCanvasSize(this.canvas.interface, width, height);\n      this.setCanvasSize(this.canvas.drawing, width, height);\n      this.setCanvasSize(this.canvas.temp, width, height);\n      this.setCanvasSize(this.canvas.grid, width, height);\n\n      this.drawGrid(this.ctx.grid);\n      this.drawImage();\n      this.loop({ once: true });\n    }\n    this.loadSaveData(saveData, true);\n  };\n\n  setCanvasSize = (canvas, width, height) => {\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = width;\n    canvas.style.height = height;\n  };\n\n  getPointerPos = e => {\n    const rect = this.canvas.interface.getBoundingClientRect();\n\n    // use cursor pos as default\n    let clientX = e.clientX;\n    let clientY = e.clientY;\n\n    // use first touch if available\n    if (e.changedTouches && e.changedTouches.length > 0) {\n      clientX = e.changedTouches[0].clientX;\n      clientY = e.changedTouches[0].clientY;\n    }\n\n    // return mouse/touch position inside canvas\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n\n  handlePointerMove = (x, y, update) => {\n    if (this.props.disabled) return;\n\n    this.lazy.update({ x, y });\n    const isDisabled = !this.lazy.isEnabled();\n\n    if (\n      (this.isPressing && !this.isDrawing) ||\n      (isDisabled && this.isPressing)\n    ) {\n      // Start drawing and add point\n      this.isDrawing = true;\n      if (update) {\n        this.points.pop();\n      }\n      this.points.push(this.lazy.brush.toObject());\n    }\n\n    if (this.isDrawing) {\n      // Add new point\n      if (update) {\n        this.points.pop();\n      }\n      this.points.push(this.lazy.brush.toObject());\n\n      // Draw current points\n      this.drawPoints({\n        points: this.points,\n        brushColor: this.props.brushColor,\n        brushRadius: this.props.brushRadius\n      });\n    }\n\n    this.mouseHasMoved = true;\n  };\n\n  drawPoints = ({ points, brushColor, brushRadius }) => {\n    this.ctx.temp.lineJoin = \"round\";\n    this.ctx.temp.lineCap = \"round\";\n    this.ctx.temp.strokeStyle = brushColor;\n\n    this.ctx.temp.clearRect(\n      0,\n      0,\n      this.ctx.temp.canvas.width,\n      this.ctx.temp.canvas.height\n    );\n    this.ctx.temp.lineWidth = brushRadius * 2;\n\n    let p1 = points[0];\n    let p2 = points[1];\n\n    this.ctx.temp.moveTo(p2.x, p2.y);\n    this.ctx.temp.beginPath();\n\n    for (var i = 1, len = points.length; i < len; i++) {\n      // we pick the point between pi+1 & pi+2 as the\n      // end point and p1 as our control point\n      var midPoint = midPointBtw(p1, p2);\n      this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      p1 = points[i];\n      p2 = points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    this.ctx.temp.lineTo(p1.x, p1.y);\n    this.ctx.temp.stroke();\n  };\n\n  saveLine = ({ brushColor, brushRadius } = {}) => {\n    if (this.points.length < 2) return;\n\n    let line = {\n      points: [...this.points],\n      brushColor: brushColor || this.props.brushColor,\n      brushRadius: brushRadius || this.props.brushRadius\n    };\n    \n    // Save as new line\n    if (!(this.props.pageNumber in this.lines))\n      this.lines[this.props.pageNumber] = []\n    this.lines[this.props.pageNumber].push(line);\n\n    this.props.onLineComplete(line.points);\n\n    // Reset points array\n    this.points.length = 0;\n\n    const width = this.canvas.temp.width;\n    const height = this.canvas.temp.height;\n\n    // Copy the line to the drawing canvas\n    this.ctx.drawing.drawImage(this.canvas.temp, 0, 0, width, height);\n\n    // Clear the temporary line-drawing canvas\n    this.ctx.temp.clearRect(0, 0, width, height);\n\n    this.triggerOnChange();\n  };\n\n  triggerOnChange = () => {\n    this.props.onChange && this.props.onChange(this);\n  };\n\n  clear = () => {\n    this.lines[this.props.pageNumber] = []\n    this.valuesChanged = true;\n    this.ctx.drawing.clearRect(\n      0,\n      0,\n      this.canvas.drawing.width,\n      this.canvas.drawing.height\n    );\n    this.ctx.temp.clearRect(\n      0,\n      0,\n      this.canvas.temp.width,\n      this.canvas.temp.height\n    );\n    this.props.onClear && this.props.onClear();\n  };\n\n  loop = ({ once = false } = {}) => {\n    if (this.mouseHasMoved || this.valuesChanged) {\n      const pointer = this.lazy.getPointerCoordinates();\n      const brush = this.lazy.getBrushCoordinates();\n\n      this.drawInterface(this.ctx.interface, pointer, brush);\n      this.mouseHasMoved = false;\n      this.valuesChanged = false;\n    }\n\n    if (!once) {\n      window.requestAnimationFrame(() => {\n        this.loop();\n      });\n    }\n  };\n\n  drawGrid = ctx => {\n    if (this.props.hideGrid) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    ctx.beginPath();\n    ctx.setLineDash([5, 1]);\n    ctx.setLineDash([]);\n    ctx.strokeStyle = this.props.gridColor;\n    ctx.lineWidth = 0.5;\n\n    const gridSize = 25;\n\n    let countX = 0;\n    while (countX < ctx.canvas.width) {\n      countX += gridSize;\n      ctx.moveTo(countX, 0);\n      ctx.lineTo(countX, ctx.canvas.height);\n    }\n    ctx.stroke();\n\n    let countY = 0;\n    while (countY < ctx.canvas.height) {\n      countY += gridSize;\n      ctx.moveTo(0, countY);\n      ctx.lineTo(ctx.canvas.width, countY);\n    }\n    ctx.stroke();\n  };\n\n  drawInterface = (ctx, pointer, brush) => {\n    if (this.props.hideInterface) return;\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    // Draw brush preview\n    ctx.beginPath();\n    ctx.fillStyle = this.props.brushColor;\n    ctx.arc(brush.x, brush.y, this.props.brushRadius, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw mouse point (the one directly at the cursor)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n    ctx.fill();\n\n    // Draw catenary\n    if (this.lazy.isEnabled()) {\n      ctx.beginPath();\n      ctx.lineWidth = 2;\n      ctx.lineCap = \"round\";\n      ctx.setLineDash([2, 4]);\n      ctx.strokeStyle = this.props.catenaryColor;\n      this.catenary.drawToCanvas(\n        this.ctx.interface,\n        brush,\n        pointer,\n        this.chainLength\n      );\n      ctx.stroke();\n    }\n\n    // Draw brush point (the one in the middle of the brush preview)\n    ctx.beginPath();\n    ctx.fillStyle = this.props.catenaryColor;\n    ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n    ctx.fill();\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight,\n          ...this.props.style\n        }}\n        ref={container => {\n          if (container) {\n            this.canvasContainer = container;\n          }\n        }}\n      >\n        {canvasTypes.map(({ name, zIndex }) => {\n          const isInterface = name === \"interface\";\n          return (\n            <canvas\n              key={name}\n              ref={canvas => {\n                if (canvas) {\n                  this.canvas[name] = canvas;\n                  this.ctx[name] = canvas.getContext(\"2d\");\n                }\n              }}\n              style={{ ...canvasStyle, zIndex }}\n              onMouseDown={isInterface ? this.handleDrawStart : undefined}\n              onMouseMove={isInterface ? this.handleDrawMove : undefined}\n              onMouseUp={isInterface ? this.handleDrawEnd : undefined}\n              onMouseOut={isInterface ? this.handleDrawEnd : undefined}\n              onTouchStart={isInterface ? this.handleDrawStart : undefined}\n              onTouchMove={isInterface ? this.handleDrawMove : undefined}\n              onTouchEnd={isInterface ? this.handleDrawEnd : undefined}\n              onTouchCancel={isInterface ? this.handleDrawEnd : undefined}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","/** \n * Original from: https://stackoverflow.com/questions/21961839/simulation-background-size-cover-in-canvas\n * Original By Ken Fyrstenberg Nilsen\n * \n * Note: img must be fully loaded or have correct width & height set.\n */\nexport default function drawImageProp({ctx, img, x, y, w, h, offsetX, offsetY} = {}) {\n  // Defaults\n  if (typeof x !== \"number\") x = 0;\n  if (typeof y !== \"number\") y = 0;\n  if (typeof w !== \"number\") w = ctx.canvas.width;\n  if (typeof h !== \"number\") h = ctx.canvas.height;\n  if (typeof offsetX !== \"number\") offsetX = 0.5;\n  if (typeof offsetY !== \"number\") offsetY = 0.5;\n\n  // keep bounds [0.0, 1.0]\n  if (offsetX < 0) offsetX = 0;\n  if (offsetY < 0) offsetY = 0;\n  if (offsetX > 1) offsetX = 1;\n  if (offsetY > 1) offsetY = 1;\n\n  var iw = img.width,\n    ih = img.height,\n    r = Math.min(w / iw, h / ih),\n    nw = iw * r, // new prop. width\n    nh = ih * r, // new prop. height\n    cx,\n    cy,\n    cw,\n    ch,\n    ar = 1;\n\n  // decide which gap to fill\n  if (nw < w) ar = w / nw;\n  if (Math.abs(ar - 1) < 1e-14 && nh < h) ar = h / nh; // updated\n  nw *= ar;\n  nh *= ar;\n\n  // calc source rectangle\n  cw = iw / (nw / w);\n  ch = ih / (nh / h);\n\n  cx = (iw - cw) * offsetX;\n  cy = (ih - ch) * offsetY;\n\n  // make sure source rectangle is valid\n  if (cx < 0) cx = 0;\n  if (cy < 0) cy = 0;\n  if (cw > iw) cw = iw;\n  if (ch > ih) ch = ih;\n\n  // fill image in dest. rectangle\n  ctx.drawImage(img, cx, cy, cw, ch, x, y, w, h);\n}\n","import React, { Component } from \"react\";\nimport { Document } from 'react-pdf/dist/esm/entry.webpack';\nimport { Page } from 'react-pdf';\nimport CanvasDraw from \"./CanvasDraw/index\";\nimport { useTable } from 'react-table';\nimport { FilePicker } from 'react-file-picker'\nimport './App.css';\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nclass App extends Component {\n  state = {\n    color: \"#ffc600\",\n    width: 612,\n    height: 1008,\n    oldWidth: 612,\n    oldHeight: 1008,\n    brushRadius: 10,\n    numPages: 1,\n    pageNumber: 1,\n    pdfRealWidth: 0,\n    pdfRealHeight: 0,\n    heightConversion: 0,\n    widthConversion: 0,\n    ductWidth: 8,\n    ductHeight: 8,\n    points: [],\n    ready: false,\n    pdfFileName: \"\",\n    pdfFileUrl: \"\",\n    scale: 0\n  };\n\n  allPoints = {};\n\n  columns = [\n    {\n      Header: 'Estimate',\n      columns: [\n        {\n          Header: 'Line #',\n          accessor: 'id',\n        },\n        {\n          Header: 'Length',\n          accessor: 'length',\n        },\n        {\n          Header: 'Height',\n          accessor: 'height',\n        },\n        {\n          Header: 'Width',\n          accessor: 'width',\n        },\n        {\n          Header: 'Price',\n          accessor: 'price',\n        },\n      ],\n    }\n  ];\n\n  componentDidMount() {\n    // let's change the color randomly every 2 seconds. fun!\n    window.setInterval(() => {\n      this.setState({\n        color: \"#\" + Math.floor(Math.random() * 16777215).toString(16)\n      });\n    }, 2000);\n  }\n\n  setConversion = () => {\n    let { pdfRealHeight, pdfRealWidth, height, width } = this.state;\n\n    // conversion for pixels/inch\n    let heightConversion = height/pdfRealHeight;\n    let widthConversion = width/pdfRealWidth;\n\n    this.setState({ heightConversion, widthConversion })\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n    setTimeout(function() {\n      this.setState({\n        height: document.getElementById(\"PDF\").clientHeight,\n        width: document.getElementById(\"PDF\").clientWidth\n      });\n      this.setConversion();\n    }.bind(this), 1000);\n  }\n\n  handleLineDraw = (points) => {\n    let { x: x1, y: y1 } = points[0];\n    let { x: x2, y: y2 } = points[1];\n    let lineLength = Math.sqrt((x2-x1)**2 + (y2-y1)**2);\n    let realLength = (lineLength*this.state.scale/6/(this.state.heightConversion+this.state.widthConversion)).toFixed(2);\n\n    // console.log({lineLength, realLength });\n\n    this.setState(prevState => ({\n        points: [...prevState.points, { id: prevState.points.length+1, length: realLength, width: prevState.ductWidth, height: prevState.ductHeight, price: (realLength*(prevState.ductWidth+prevState.ductHeight)*10/12).toFixed(2) }]\n      }),\n      () => this.allPoints[this.state.pageNumber] = this.state.points\n    );\n  }\n\n  handleClearDrawing = () => {\n    this.setState(prevState => ({\n        points: []\n      }),\n      () => this.allPoints[this.state.pageNumber] = this.state.points\n    );\n  }\n\n  render() {\n    const {pageNumber, numPages} = this.state;\n    const allPointsTableData = Object.keys(this.allPoints).reduce(function (r, k) {\n      return r.concat(this.allPoints[k]);\n    }.bind(this), []);\n    return (\n      <div className=\"AppEE\">\n        <div className=\"Control\">\n          <button\n            onClick={() => {\n              this.saveableCanvas.clear();\n            }}\n          >\n            Clear\n          </button>\n          <button\n            onClick={() => {\n              this.saveableCanvas.undo();\n            }}\n          >\n            Undo\n          </button>\n          <div>\n            <label>Brush-Radius:</label>\n            <input\n              type=\"number\"\n              value={this.state.brushRadius}\n              onChange={e =>\n                this.setState({ brushRadius: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          {/* <div>\n            Height Conversion:\n            {this.state.heightConversion}\n          </div>\n          <div>\n            Width Conversion:\n            {this.state.widthConversion}\n          </div> */}\n          <div>\n            <label>Duct Height:</label>\n            <input\n              type=\"number\"\n              value={this.state.ductHeight}\n              onChange={e =>\n                this.setState({ ductHeight: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label>Duct Width:</label>\n            <input\n              type=\"number\"\n              value={this.state.ductWidth}\n              onChange={e =>\n                this.setState({ ductWidth: parseInt(e.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label>Zoom:</label>\n            <input\n              type=\"button\"\n              value=\"-\"\n              onClick={e =>\n                this.setState(prevState => ({oldWidth: prevState.width, oldHeight: prevState.height, width: prevState.width*0.666, height: prevState.height*0.666 }), this.setConversion)\n              }\n            />\n            <input\n              type=\"button\"\n              value=\"+\"\n              onClick={e => \n                this.setState(prevState => ({ oldWidth: prevState.width, oldHeight: prevState.height, width: prevState.width*1.5, height: prevState.height*1.5 }), this.setConversion)\n              }\n            />\n          </div>\n          <div>\n            <label>Page:</label>\n            <input\n              disabled={this.state.pageNumber === 1}\n              type=\"button\"\n              value=\"prev\"\n              onClick={e =>\n                this.setState(prevState => ({ pageNumber: prevState.pageNumber - 1 }), () => this.saveableCanvas.changePage(this.state.pageNumber))\n              }\n            />\n            <input\n              disabled={this.state.pageNumber === this.state.numPages}\n              type=\"button\"\n              value=\"next\"\n              onClick={e =>\n                this.setState(prevState => ({ pageNumber: prevState.pageNumber + 1 }), () => this.saveableCanvas.changePage(this.state.pageNumber))\n              }\n            />\n            <input\n              type=\"number\"\n              min={1}\n              max={this.state.numPages}\n              value={this.state.pageNumber}\n              onChange={e => {\n                  let val = parseInt(e.target.value, 10);\n                  if (val > this.state.numPages) val = this.state.numPages;\n                  if (val < 1) val = 1;\n                  this.setState({ pageNumber: val }, () => this.state.ready ? this.saveableCanvas.changePage(this.state.pageNumber) : null);\n                }\n              }\n            />\n          </div>\n        </div>\n        {\n          this.state.ready ? \n          <div className=\"Content\">\n            <div className=\"PDF\">\n              <div id=\"PDF\">\n                <Document\n                  file={this.state.pdfFileUrl}\n                  onLoadSuccess={this.onDocumentLoadSuccess}\n                >\n                  <Page \n                    pageNumber={pageNumber}\n                    width={this.state.width}\n                  />\n                </Document>\n              </div>\n              <p>Page {pageNumber} of {numPages}</p>\n            </div>\n            <CanvasDraw\n              ref={canvasDraw => (this.saveableCanvas = canvasDraw)}\n              brushColor=\"rgba(155,12,60,0.3)\"\n              brushRadius={this.state.brushRadius}\n              lazyRadius={0}\n              canvasWidth={this.state.width}\n              canvasHeight={this.state.height}\n              oldWidth={this.state.oldWidth}\n              oldHeight={this.state.oldHeight}\n              onLineComplete={this.handleLineDraw}\n              onClear={this.handleClearDrawing}\n              pageNumber={this.state.pageNumber}\n              hideGrid\n            />\n            <div className=\"Table\">\n              Price for page {this.state.pageNumber}\n              <Table\n                columns={this.columns}\n                data={[...this.state.points, { id: \"Total\", length: \"-\", width: \"-\", height: \"-\", price: (this.state.points.reduce((a, b) => {return a + parseFloat(b.price)}, 0)).toFixed(2) }]}\n              />\n            </div>\n            <div className=\"Table\">\n              Price for all pages\n              <Table\n                columns={this.columns}\n                data={[...allPointsTableData, { id: \"Total\", length: \"-\", width: \"-\", height: \"-\", price: (allPointsTableData.reduce((a, b) => {return a + parseFloat(b.price)}, 0)).toFixed(2) }]}\n              />\n            </div>\n          </div>\n          :\n          <div className=\"PdfSelect\">\n            <div>\n              <input\n                type=\"button\"\n                value=\"Use sample PDF\"\n                onClick={e =>\n                  this.setState({ ready: true, pdfFileUrl: \"/sample.pdf\", scale: 100, pdfRealWidth: 42, pdfRealHeight: 30 })\n                }\n              />\n            </div>\n            <div>\n              or\n            </div>\n            <FilePicker\n              disabled\n              extensions={['pdf']}\n              onChange={FileObject => this.setState({ pdfFileUrl: URL.createObjectURL(FileObject), pdfFileName: FileObject.name})}\n              onError={errMsg => (console.log(errMsg))}\n            >\n              <button>\n                Choose PDF\n              </button>\n            </FilePicker>\n            {this.state.pdfFileName}\n            <div>\n              <label>Width (inches):</label>\n              <input\n                type=\"number\"\n                value={this.state.pdfRealWidth}\n                onChange={e => {\n                    this.setState({ pdfRealWidth: parseFloat(e.target.value, 10) });\n                  }\n                }\n              />\n            </div>\n            <div>\n              <label>Height (inches):</label>\n              <input\n                type=\"number\"\n                value={this.state.pdfRealHeight}\n                onChange={e => {\n                    this.setState({ pdfRealHeight: parseFloat(e.target.value, 10) });\n                  }\n                }\n              />\n            </div>\n            <div>\n              <label>Scale 1:</label>\n              <input\n                type=\"number\"\n                value={this.state.scale}\n                onChange={e => {\n                    this.setState({ scale: parseFloat(e.target.value, 10) });\n                  }\n                }\n              />\n            </div>\n            <div>\n              <input\n                disabled={this.state.pdfFileName === \"\" || this.state.pdfRealHeight === 0 || this.state.pdfRealWifth === 0 || this.state.scale === 0}\n                type=\"button\"\n                value=\"Go\"\n                onClick={e => {\n                    this.setState({ ready: true }, this.setConversion);\n                  }\n                }\n              />\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { useState } from 'react';\nimport { CirclePicker } from 'react-color';\n\nfunction CreateObject(props) {\n  const [width, setWidth] = useState(props.width || 3);\n  const [height, setHeight] = useState(props.height || 3);\n  const [rotate, setRotate] = useState(props.rotate || 0);\n  const [name, setName] = useState(props.name || \"bed\");\n  const [color, setColor] = useState(props.color || \"#f44336\");\n  const [layer, setLayer] = useState(props.layer || 0);\n  const [isRound, setIsRound] = useState(props.isRound || false);\n\n  const { onClose, onCreate, isUpdate } = props;\n  return (\n    <div className=\"createObject\">\n      {isUpdate ? \"Update object\" : \"Create new object\"}\n      <input\n        className=\"closeButton\"\n        type=\"button\"\n        value=\"X\"\n        onClick={() => onClose()}\n      />\n      <div>\n        Name\n        <input\n          className=\"textBox\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div>\n        Width\n        <input\n          className=\"numBox\"\n          type=\"text\"\n          value={width}\n          onChange={(e) => setWidth(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n        />\n      </div>\n      <div>\n        Height\n        <input\n          className=\"numBox\"\n          type=\"text\"\n          value={height}\n          onChange={(e) => setHeight(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n        />\n      </div>\n      <div className=\"colorChooser\">\n        <CirclePicker\n          className=\"\"\n          width=\"210px\"\n          circleSize={28}\n          circleSpacing={7}\n          color={color}\n          onChangeComplete={color => setColor(color.hex)}\n        />\n      </div>\n      <div>\n        Layer\n        <input\n          className=\"numBox\"\n          type=\"text\"\n          value={layer}\n          onChange={(e) => setLayer(e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\n        />\n      </div>\n      <div>\n        Rotate\n        <input\n          className=\"numBox\"\n          type=\"text\"\n          value={rotate}\n          onChange={(e) => setRotate(e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\n        />\n      </div>\n      <div>\n        <input type=\"radio\" id=\"isRoundRadio0\"\n          checked={!isRound} \n          onChange={(e) => setIsRound(false)} \n        />\n        <label htmlFor=\"isRoundRadio0\">square</label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"isRoundRadio1\"\n          checked={isRound} \n          onChange={(e) => setIsRound(true)} \n        />\n        <label htmlFor=\"isRoundRadio1\">round</label>\n      </div>\n      <div>\n        <input\n          type=\"button\"\n          value={isUpdate ? \"Update\" : \"Create\"}\n          onClick={() => onCreate({name, width, height, color, layer, isRound, rotate})}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CreateObject;\n","import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport CreateObject from './CreateObject';\n\nfunction getStyles(props, inNav) {\n  const { squareSize, width, height, layer, color, isRound, rotate } = props;\n  let styles = {\n    width: inNav ? 50 : width*squareSize,\n    height: inNav ? 50 : height*squareSize,\n    zIndex: 10+layer,\n    backgroundColor: color,\n    transform: `rotate(${rotate || 0}deg)`\n  };\n  if (isRound) {\n    styles.borderRadius = '50%';\n  }\n  return styles;\n}\n\nfunction handleDrag(data, inNav, setInNav, setIsLocked, onNavAdd, onNavRemove, index) {\n  let windowWidth = window.innerWidth;\n  if(!inNav && data.screenX <= windowWidth/4){\n    setInNav(true);\n    setIsLocked(true);\n    onNavAdd(index);\n  }\n  else if(inNav && data.screenX >= windowWidth/4){\n    setInNav(false);\n    onNavRemove(index);\n  }\n}\n\nfunction getPosition(index) {\n  let yOffset = Math.floor(index/3)*60;\n  let xOffset = (index%3)*60;\n  return {x: 15+xOffset, y: 50+yOffset};\n}\n\nfunction ObjectQ(props) {\n  const [inNav, setInNav] = useState(true);\n  const [isLocked, setIsLocked] = useState(true);\n  const [editing, setEditing] = useState(false);\n  const { name, width, height, index, onNavAdd, onNavRemove, navIndex, onUpdate,\n    layer, color, isRound, rotate } = props;\n  return (\n    <>\n    {editing?\n      <CreateObject \n        onCreate={(object) => {onUpdate(index, object);setEditing(false);}} \n        onClose={() => setEditing(false)}\n        isUpdate={true}\n        {...{ name, width, height, layer, color, isRound, rotate}}\n      />\n      : null\n    }\n    <Draggable \n      onDrag={(data) => handleDrag(data, inNav, setInNav, setIsLocked, onNavAdd, onNavRemove, index)}\n      onMouseDown={() => setIsLocked(false)}\n      position={isLocked && inNav ? getPosition(navIndex) : null}\n    >\n      <div>\n        {inNav ? \n          <input\n            className=\"editButton\"\n            type=\"button\"\n            value=\"?\"\n            onClick={() => setEditing(true)}\n          />\n          : null\n        }\n        <div className=\"object\" style={getStyles(props, inNav)}>\n          {name}\n          <div className=\"bottomMiddle\">{`${width}x${height}`}</div>\n        </div>\n      </div>\n    </Draggable>\n    </>\n  );\n}\n\nexport default ObjectQ;\n","import React, { useState } from 'react';\nimport ObjectQ from './ObjectQ';\nimport CreateObject from './CreateObject';\nimport './App.css';\n\nfunction drawBoard(width, height, scale){\n  let canvas = document.getElementById('mainCanvas');\n  let context = canvas.getContext(\"2d\");\n\n  let windowWidth = window.innerWidth * 0.7;\n  let windowHeight = window.innerHeight * 0.7;\n\n  let squareSize = Math.min(windowWidth/width, windowHeight/height)*scale;\n\n  let canvasWidth = width * squareSize / scale;\n  let canvasHeight = height * squareSize / scale;\n\n  context.canvas.width  = canvasWidth;\n  context.canvas.height = canvasHeight;\n\n  for (let x = 0; x <= width/scale; x += 1) {\n    context.moveTo(x*squareSize+.5, 0);\n    context.lineTo(x*squareSize+.5, canvasHeight);\n  }\n  context.moveTo(canvasWidth-.5, 0);\n  context.lineTo(canvasWidth-.5, canvasHeight-.5);\n\n  for (let x = 0; x <= height/scale; x += 1) {\n    context.moveTo(0, x*squareSize+.5);\n    context.lineTo(canvasWidth, x*squareSize+.5);\n  }\n  context.moveTo(0, canvasHeight-.5);\n  context.lineTo(canvasWidth, canvasHeight-.5);\n\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  return squareSize / scale;\n}\n\nfunction handleObjectUpdate(index, newObj, objects, setObjects) {\n  // 1. Make a shallow copy of the items\n  let items = [...objects];\n  items[index] = newObj;\n  setObjects(items);\n}\n\nfunction getObjects(objects, squareSize, navArray, setNavArray, setObjects) {\n  let objectComps = [];\n  let count = 0;\n  for (let object of objects){\n    objectComps.push(\n      <ObjectQ\n        squareSize={squareSize}\n        width={object.width}\n        height={object.height}\n        layer={object.layer}\n        color={object.color}\n        name={object.name}\n        isRound={object.isRound}\n        index={count}\n        rotate={object.rotate}\n        onUpdate={(index, newObj) => handleObjectUpdate(index, newObj, objects, setObjects)}\n        navIndex={navArray.indexOf(count)}\n        onNavAdd={(objIndex) => setNavArray([...navArray, objIndex])}\n        onNavRemove={(objIndex) => {\n          const index = navArray.indexOf(objIndex);\n          if (index > -1) {\n            navArray.splice(index, 1);\n          }\n          setNavArray(navArray);\n        }}\n        key={`ObjectQ${count}`}\n      />\n    )\n    count++;\n  }\n  return objectComps;\n}\n\nfunction App() {\n\n  const [width, setWidth] = useState(10);\n  const [height, setHeight] = useState(10);\n  const [scale, setScale] = useState(1);\n  const [squareSize, setSquareSize] = useState(0);\n  const [objects, setObjects] = useState([]);\n  const [creatingObject, setCreatingObject] = useState(false);\n  const [navArray, setNavArray] = useState([]);\n\n  return (\n    <div className=\"App\">\n      {creatingObject ? \n        <CreateObject \n          onCreate={(object) => {setObjects([...objects, object]); setNavArray([...navArray, objects.length])}} \n          onClose={() => setCreatingObject(false)}\n        />\n        : null\n      }\n      <div className=\"sidebar\">\n        <div className=\"nav\">\n          <h2>Objects</h2>\n          <div>\n            <input\n              disabled={creatingObject}\n              type=\"button\"\n              value=\"Create new object\"\n              onClick={() => setCreatingObject(true)}\n            />\n          </div>\n          {getObjects(objects, squareSize, navArray, setNavArray, setObjects)}\n        </div>\n      </div>\n\n      <div className=\"main\">\n        <div>\n          <p>Room Layout</p>\n          <div>\n            Width\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={width}\n              onChange={(e) => setWidth(parseFloat(e.target.value))}\n            />\n            Height\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={height}\n              onChange={(e) => setHeight(parseFloat(e.target.value))}\n            />\n            Scale\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={scale}\n              onChange={(e) => setScale(parseFloat(e.target.value))}\n            />\n            <input\n              className=\"button\"\n              type=\"button\"\n              value=\"Go\"\n              onClick={() => setSquareSize(drawBoard(width, height, scale))}\n            />\n          </div>\n        </div>\n        <div>\n          <canvas id=\"mainCanvas\" className=\"mainCanvas\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Projects from './Projects';\nimport About from './About';\nimport Time from './Time';\nimport Snek from './Snek';\nimport EasyEstimation from './EasyEstimation/src/App';\nimport RoomLayout from './RoomLayout/src/App';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"Body\">\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/absolute-time\" component={Time} />\n            <Route path=\"/snek\" component={() => <Snek isBasic />} />\n            <Route path=\"/snek-ai\" component={Snek} />\n            <Route path=\"/easy-estimation\" component={EasyEstimation} />\n            <Route path=\"/room-layout\" component={RoomLayout} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n<HashRouter>\n  <App />\n</HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}