{"version":3,"sources":["Header.js","Home.js","Projects.js","Ref.js","About.js","Time.js","UseScript.js","Snek.js","RoomLayout/src/CreateObject.js","RoomLayout/src/ObjectQ.js","RoomLayout/src/App.js","Collision/src/Quadtree.js","Collision/src/App.js","App.js","index.js"],"names":["Header","state","page","getPageName","path","charAt","toUpperCase","slice","this","setState","window","location","hash","className","href","onClick","Component","Home","Projects","target","src","width","alt","to","Ref","props","link","text","rel","About","Time","time","Date","now","interval","setInterval","clearInterval","d","getHours","getMinutes","getSeconds","overallTime","Math","floor","getSecondsToday","toFixed","useScript","url","useEffect","script","document","createElement","async","body","appendChild","removeChild","Snek","id","tabIndex","type","defaultValue","size","style","isBasic","UseScript","CreateObject","useState","setWidth","height","setHeight","rotate","setRotate","name","setName","color","setColor","layer","setLayer","isRound","setIsRound","onClose","onCreate","isUpdate","value","onChange","e","parseFloat","circleSize","circleSpacing","onChangeComplete","hex","parseInt","checked","htmlFor","getStyles","inNav","squareSize","styles","backgroundColor","transform","borderRadius","getLayerStyles","zIndex","getPosition","index","x","y","ObjectQ","onNavAdd","onNavRemove","navIndex","onUpdate","onObjectChange","position","editing","setEditing","object","onStart","data","onStop","undefined","handleDragStop","drawBoard","scale","context","getElementById","getContext","windowWidth","innerWidth","windowHeight","innerHeight","min","canvasWidth","canvasHeight","canvas","moveTo","lineTo","strokeStyle","stroke","App","initialSaveState","useMemo","JSON","parse","localStorage","getItem","1","details","objects","objectSaveStateRef","useRef","setScale","setSquareSize","setObjects","creatingObject","setCreatingObject","navArray","setNavArray","Object","keys","saveIds","setSaveIds","saveId","setSaveId","newRoomName","setNewRoomName","idOfSave","saveState","current","nav","numObjects","length","i","push","getObjectsFromSave","intialObjects","initialNav","roomSize","handleObjectUpdate","newObj","items","updateObjectSaveState","objectSaveState","setItem","stringify","newObjectIndex","disabled","objectComps","count","indexOf","objIndex","splice","getObjects","newSize","updateRoomSize","map","newSaveId","handleRoomCreate","placeholder","newName","updateRoomName","Quadtree","x1","y1","x2","y2","depth","myEntities","containingEntityCount","subTrees","drawAll","getxys","x3","y3","forEach","subTree","getEntityCount","getEntities","getAllEntities","entities","entity","some","getNeighbourIds","filter","subTreeIds","getSubTreeIds","neighbourIds","neighbourId","createSubTrees","addEntity","newEntity","entityCount","addEntityToSubTrees","removeEntity","entityToRemove","removeEntityFromSubTrees","moveEntity","newLocation","radius","inLeft","inRight","inTop","inBottom","toString","pre","s","qt","firstSubTreeId","subTreePath","getSubtreePath","tempqt","tempEntities","directions","step","setDots","numPoints","minRadius","maxRadius","setNumPoints","totalAttempts","random","createEntity","areColliding","max","rn","xRatio","stepX","round","sqrt","speed","stepY","clearRect","drawPoints","useMultiColor","beginPath","entityColor","arc","PI","seed","join","colors","sin","getRandomColor","includes","fillStyle","fill","entity1","entity2","abs","intervalId","setIntervalId","numDots","setNumDots","dotSpeed","setDotSpeed","setMinRadius","setMaxRadius","updates","setUpdates","setUseMulticolor","newIntervalId","endsWith","collidingEntityIds","collisionEntity","xDif","yDif","newX","newY","newPoint","val","component","exact","RoomLayout","Collision","ReactDOM","render"],"mappings":"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","file":"static/js/main.f4358a5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  state = { page: '' }\n\n  componentDidMount() {\n    this.setState({ page: this.getPageName(window.location.hash) });\n  }\n\n  getPageName = (path) => {\n    if (path == '#/') return 'Home';\n    return path.charAt(2).toUpperCase() + path.slice(3)\n  }\n\n  render() {\n    const { page } = this.state;\n    return (\n      <div className=\"Header\">\n        <nav className=\"navbar navbar-expand-lg navbar-dark\">\n            <div className=\"container-fluid\">\n              <div className=\"m-3\">\n                <a className=\"navbar-brand\" href=\"/\">\n                  <span className=\"Name\">Jacob Atzori</span>\n                </a>\n                <div className=\"PageTitle\">\n                  {page}\n                </div>\n              </div>\n              <span className=\"navbar-nav\">\n                <a className=\"nav-link nav-item\" onClick={() => this.setState({page: 'Home'})} href=\"/#/\">Home</a>\n                <a className=\"nav-link nav-item\" onClick={() => this.setState({page: 'Projects'})} href=\"/#/projects\">Projects</a>\n                <a className=\"nav-link nav-item\" onClick={() => this.setState({page: 'About'})} href=\"/#/about\">About</a>\n              </span>\n            </div>\n          </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home PageContent\">\n\n        <div className=\"p-5 pb-6 container-fluid\">\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-md-4 pt-3\">\n              <div className=\"KeyWordContainer\">\n                <span className=\"KeyWord\">WHO</span>\n                <span className=\"KeyWordContinued\"> am I?</span>\n              </div>\n            </div>\n            <div className=\"col-md-2 col-lg-1\" />\n            <div className=\"col-md-6 align-middle pt-5\">\n              <p>\n                My name is Jacob Atzori.\n                <br />\n                I am a recent graduate from the University of Toronto where I completed a degree in computer science and mathematics.\n                <br />\n                I am a professional software developer and I make coding projects for fun.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"p-5 pb-6 container-fluid\">\n          <div className=\"row justify-content-md-center\">\n          <div className=\"col-md-6 order-md-2\">\n              <div className=\"KeyWordContainer\">\n                <span className=\"KeyWord\">WHAT</span>\n                <span className=\"KeyWordContinued\"> do I do?</span>\n              </div>\n            </div>\n            <div className=\"col-md-5 align-middle order-md-1  pt-4\">\n              <p>\n                I make web apps! \n                <br />\n                When I get a cool idea and can't find it easily online, I'll try to make it!  I find that websites are the most accessible platform, and I love to code things in React.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        \n        <div className=\"p-5 pb-6 container-fluid\">\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-md-4 pt-4\">\n              <div className=\"KeyWordContainer\">\n                <span className=\"KeyWord\">WHY</span>\n                <span className=\"KeyWordContinued\"> do I do it?</span>\n              </div>\n            </div>\n            <div className=\"col-md-2 col-lg-1\" />\n            <div className=\"col-md-6 align-middle pt-3\">\n              <p>\n                I do it mostly for fun!  \n                <br />\n                I love when technology makes life easier.  When I have a task that needs to be done over and over, and can be made much simpler with technology, I always love to find or develop an app to make it easier.  This feeling is even stronger when I see someone else doing a tedious task over and over.  I can invest just a few hours coding (which is fun in itself), and save someone else so many more hours over the next weeks or years of their life.\n              </p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div className=\"Projects PageContent\">\n\n<div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-6 pb-3\">\n                <a target=\"_blank\" href=\"https://www.myeasyestimator.com\">\n                  <img src=\"/EasyEstimator.png\" width={360} alt=\"Easy Estimator\" />\n                </a>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-5\">\n                <p>\n                  <span className=\"ProjectName\">Easy Estimator</span>\n                  <br />\n                  An online construction estimation and takeoff software.\n                  <br/>\n                  This online SaaS application is used by estimators to price mechanical \n                  costruction projects from PDFs.\n                </p>\n                <a className=\"btn btn-dark btn-lg\" target=\"_blank\" href=\"https://www.myeasyestimator.com\">Check it out</a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-5 pb-3\">\n                <p>\n                  <span className=\"ProjectName\">Room Layout</span>\n                  <br />\n                  An online tool to help you layout a room.\n                  <br/>\n                  Set your room size, and then create all the objects you plan to put in the room.\n                  Drag them around and see what layout works best for you.\n                </p>\n                <Link className=\"btn btn-dark btn-lg\" to=\"/room-layout\">Check it out</Link>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-6\">\n                <Link to=\"/room-layout\">\n                  <img src=\"/RoomLayout.png\" width={300} alt=\"Room Layout\" />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-6 pb-3\">\n                <Link to=\"/snek\">\n                  <img src=\"/snek.png\" width={300} alt=\"Snek\" />\n                </Link>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-5\">\n                <p>\n                  <span className=\"ProjectName\">Snek</span>\n                  <br />\n                  The classic game of snek.\n                  <br/>\n                  Created in javascript using setInterval.\n                </p>\n                <Link className=\"btn btn-dark btn-lg\" to=\"/snek\">Check it out</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n        \n        <div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-5 pb-3\">\n                <p>\n                  <span className=\"ProjectName\">Snek AI</span>\n                  <br />\n                  The classic game of snek, but you let an AI play for you.\n                  <br/>\n                  Created in javascript using an custom made algorithm.\n                  Avoids walls and itself, uses BFS to avoid trapping itself - to an extent.\n                </p>\n                <Link className=\"btn btn-dark btn-lg\" to=\"/snek-ai\">Check it out</Link>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-6\">\n                <Link to=\"/snek-ai\">\n                  <img src=\"/snek-ai.png\" width={300} alt=\"Snek AI\" />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-6\">\n                <Link to=\"/collision-detection\">\n                  <img src=\"/collision-detection.png\" width={300} alt=\"Collision Detection\" />\n                </Link>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-5 pb-3\">\n                <p>\n                  <span className=\"ProjectName\">2D Collision with Quadtree</span>\n                  <br />\n                  Efficient collision detection for 2D\n                </p>\n                <Link className=\"btn btn-dark btn-lg\" to=\"/collision-detection\">Check it out</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* <hr />\n        \n        <div className=\"p-5\">\n          <div className=\"container-fluid-md\">\n            <div className=\"row justify-content-md-center\">\n              <div className=\"col-md-5 pb-3\">\n                <p>\n                  <span className=\"ProjectName\">Pica Y Fijas</span>\n                  <br />\n                  The computer picks a secret code.\n                  <br/>\n                  You try to guess it, and you are told how many numbers you got right, and how many are in the right position.\n                </p>\n                <Link className=\"btn btn-dark btn-lg\" to=\"/picas-y-fijas\">Check it out</Link>\n              </div>\n              <div className=\"col-md-1\" />\n              <div className=\"col-md-6\">\n                <Link to=\"/picas-y-fijas\">\n                  <img src=\"/picas-y-fijas.png\" width={300} alt=\"Picas Y Fijas\" />\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\n\nclass Ref extends Component {\n  render() {\n    let { link, text } = this.props;\n    return (\n      <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n       {text}\n      </a>\n    );\n  }\n}\n\nexport default Ref;\n","import React, { Component } from 'react';\nimport Ref from './Ref';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"About PageContent pb-5\">\n        <div className=\"row justify-content-md-center pt-5\">\n          <div className=\"col-md-6 pt-3\">\n            <h2>About Me</h2>\n            <p>\n              My name is Jacob Atzori and I am a software developer\n            </p>\n            <h2 className=\"pt-3 bt\">Technical Skills</h2>\n            <div className=\"row pt-2 justify-content-center\">\n              <div className=\"col-3\">\n                <p>C#</p>\n              </div>\n              <div className=\"col-3\">\n                <p>JavaScript</p>\n              </div>\n              <div className=\"col-3\">\n                <p>React</p>\n              </div>\n            </div>\n            <div className=\"row pt-2 justify-content-center\">\n              <div className=\"col-3\">\n                <p>Git</p>\n              </div>\n              <div className=\"col-3\">\n                <p>Docker</p>\n              </div>\n              <div className=\"col-3\">\n                <p>Agile</p>\n              </div>\n            </div>\n            <div className=\"row pt-2 justify-content-center\">\n              <div className=\"col-3\">\n                <p>Python</p>\n              </div>\n              <div className=\"col-3\">\n                <p>Java</p>\n              </div>\n              <div className=\"col-3\">\n                <p>NodeJS</p>\n              </div>\n            </div>\n            <div className=\"row pt-2 justify-content-center\">\n              <div className=\"col-3\">\n                <p>Azure</p>\n              </div>\n              <div className=\"col-3\">\n                <p>Unix</p>\n              </div>\n              <div className=\"col-3\">\n                <p>C</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-3 pt-2 bl\">\n            <h2>Education</h2>\n            <h5>University of Toronto</h5>\n            <p>\n              Honours BSc <br/>\n              Computer Science <br/>\n              Mathematics <br/>\n            </p>\n          </div>\n          <div className=\"col-md-3 pt-3\">\n            <img alt=\"Jacob Atzori\" width=\"250\" src=\"/Atzori.jpg\" />\n          </div>\n        </div>\n        <hr/>\n        <div className=\"row justify-content-md-center pt-3\">\n          <div className=\"col-md-6 pt-3\">\n            <h2 className=\"\">Experience</h2>\n          </div>\n        </div>\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col-md-6 pt-3 br\">\n            <h5>Ceridian HCM</h5>\n            <p>\n              Worked on an enterprise SaaS application, in the Work Force Management area. <br/>\n              Worked with back end systems where efficiency, clean code, and testing are highly prioritized. <br/>\n              Worked with a complex SQL database where optimizing queries makes a significant difference in performance. <br/>\n              Experience with test driven development and domain driven design. \n            </p>\n          </div>\n          <div className=\"col-md-6 pt-3\">\n            <h5>Indigo Books and Music</h5>\n            <p>\n              Leading development on cloud micro-services to migrate product data into a new PIM system. <br/>\n              Designing, creating and managing container and cloud based applications using Docker and Azure. <br/>\n              Developing several web apps using NodeJS and React to allow business users to easily manipulate data. <br/>\n              Integrating SonarQube code quality analyzer into several pipeline build flows. <br/>\n              Adding Auth0 user authentication into a web application and integrating existing Active Directory.\n            </p>\n          </div>\n        </div>\n        <hr/>\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col-md-8 pt-3\">\n            <h2>Awards</h2>\n            <h5>MCS Prize in Computer Science</h5>\n            <p>\n              Awarded to the top performing student in theoretical computer science courses at University of Toronto Mississauga.\n            </p>\n            <h5>MCSS Honor Roll (alpha)</h5>\n            <p>\n              Honour awarded to students who maintain a final grade of 90% or greater in five or more Math and Computer Science courses in one academic school year. (achieved 2017 & 2018)\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport Ref from './Ref';\n\nclass Time extends Component {\n  state = {\n    time: Date.now()\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getSecondsToday() {\n    let { time } = this.state;\n\t  let d = new Date(time);\n\t  return d.getHours() * 3600 + d.getMinutes() * 60 + d.getSeconds();\n\t}\n\n  render() {\n    let { time } = this.state;\n    let unixDeath = 21474836480;\n    let dayLength = 3600*24;\n    let overallTime = time/unixDeath;\n    return (\n      <div className=\"Time\">\n        <h2>\n          A 'better' way to talk about the time of the day\n        </h2>\n        <div className=\"TimeDescription\">\n          <div>\n            Instead of keeping track of hours, minutes and whether it's AM or PM,\n            we can just keep track of how much of the day has passed as a percentage.\n            For example, at 2:30 PM we are 60.4% through the day, so we can just say the time is 60%\n          </div>\n          <div className=\"TimeContainer\">\n            <span className=\"TimeLabel\">\n              Current Time: \n            </span>\n            <span className=\"CurrentTime\">\n              {Math.floor(10000*this.getSecondsToday()/dayLength)/100}%\n            </span>\n          </div>\n          <div>\n            We can also keep track of the time and date all together in one number instead of using days, months and years.\n            We can instead just say how far through <Ref link=\"https://en.wikipedia.org/wiki/Unix_time\" text=\"Unix Time\" /> we currently are.\n            Unix time started Jan 1 1970, and ends Jan 19 2038,\n            and so the current overall time is just how far through that interval we are.\n          </div>\n          <div className=\"TimeContainer\">\n            <span className=\"TimeLabel\">\n              Overall Time: \n            </span>\n            <span className=\"CurrentTime\">\n              {(overallTime - overallTime % 10**-7).toFixed(7)}%\n            </span>\n          </div>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Time;\n","import { useEffect } from 'react';\n\nconst useScript = url => {\n  useEffect(() => {\n    const script = document.createElement('script');\n\n    script.src = url;\n    script.async = true;\n\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script);\n    }\n  }, [url]);\n};\n\nexport default useScript;","import React from 'react';\nimport UseScript from './UseScript';\n\nconst Snek = (props) =>  {\n  return (\n    <div id=\"Snek\" tabIndex=\"0\" className=\"Snek\">\n      <h1>Snek</h1>\n      <div className=\"SnekInfoSection\">\n        <span className=\"SnekInfo\">\n          Speed: <input type=\"text\" id=\"speed\" defaultValue=\"10\" size=\"6\"/>\n        </span>\n        <span className=\"SnekInfo\" id='score'>\n          Score: 0\n        </span>\n        <button className=\"SnekInfo\" id='resetButton'>\n          reset\n        </button>\n        <span className=\"SnekMsg\" id='msg'></span>\n      </div>\n\n      <table className=\"center\" id={'table'} style={{ 'backgroundColor':' blue' }}></table>\n\n      { props.isBasic ? UseScript('/snek-basic.js') : UseScript('/snek-ai.js') }\n    </div>\n  );\n}\n\nexport default Snek;\n","import React, { useState } from 'react';\nimport { CirclePicker } from 'react-color';\n\nfunction CreateObject(props) {\n  const [width, setWidth] = useState(props.width || 3.0);\n  const [height, setHeight] = useState(props.height || 3.0);\n  const [rotate, setRotate] = useState(props.rotate || 0);\n  const [name, setName] = useState(props.name || \"bed\");\n  const [color, setColor] = useState(props.color || \"#f44336\");\n  const [layer, setLayer] = useState(props.layer || 0);\n  const [isRound, setIsRound] = useState(props.isRound || false);\n\n  const { onClose, onCreate, isUpdate } = props;\n  return (\n    <div className=\"createObject\">\n      <h5>{isUpdate ? \"Update object\" : \"Create new object\"}</h5>\n      <input\n        className=\"closeButton\"\n        type=\"button\"\n        value=\"X\"\n        onClick={() => onClose()}\n      />\n      <div className=\"CreateInputContainer\">\n        <div>\n          <span className=\"Label\">Name</span>\n          <input\n            className=\"textBox\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div>\n          <span className=\"Label\">Width</span>\n          <input\n            className=\"numBox\"\n            type=\"number\"\n            value={width}\n            onChange={(e) => setWidth(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n          />\n        </div>\n        <div>\n        <span className=\"Label\">Height</span>\n          <input\n            className=\"numBox\"\n            type=\"number\"\n            value={height}\n            onChange={(e) => setHeight(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n          />\n        </div>\n        <div className=\"colorChooser Center mt-2\">\n          <h3>Color</h3>\n          <CirclePicker\n            width=\"210px\"\n            circleSize={28}\n            circleSpacing={7}\n            color={color}\n            onChangeComplete={color => setColor(color.hex)}\n          />\n        </div>\n        <div>\n        <span className=\"Label\">Layer</span>\n          <input\n            className=\"numBox\"\n            type=\"number\"\n            value={layer}\n            onChange={(e) => setLayer(e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\n          />\n        </div>\n        <div>\n        <span className=\"Label\">Rotate</span>\n          <input\n            className=\"numBox\"\n            type=\"number\"\n            value={rotate}\n            onChange={(e) => setRotate(e.target.value === \"\" ? \"\" : parseInt(e.target.value))}\n          />\n        </div>\n        <div className=\"Radio pt-2\">\n          <div>\n            <input type=\"radio\" id=\"isRoundRadio0\"\n              checked={!isRound} \n              onChange={(e) => setIsRound(false)} \n            />\n            <label htmlFor=\"isRoundRadio0\">square</label>\n          </div>\n          <div>\n            <input type=\"radio\" id=\"isRoundRadio1\"\n              checked={isRound} \n              onChange={(e) => setIsRound(true)} \n            />\n            <label htmlFor=\"isRoundRadio1\">round</label>\n          </div>\n        </div>\n        <div className=\"pt-3\">\n          <input\n            type=\"button\"\n            value={isUpdate ? \"Update\" : \"Create\"}\n            onClick={() => onCreate({name, width, height, color, layer, isRound, rotate})}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateObject;\n","import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport CreateObject from './CreateObject';\n\nfunction getStyles(props, inNav) {\n  const { squareSize, width, height, color, isRound, rotate } = props;\n  let styles = {\n    width: inNav ? 50 : width*squareSize,\n    height: inNav ? 50 : height*squareSize,\n    backgroundColor: color,\n    transform: `rotate(${rotate || 0}deg)`\n  };\n  if (isRound) {\n    styles.borderRadius = '50%';\n  }\n  return styles;\n}\n\nfunction getLayerStyles(props) {\n  const { layer } = props;\n  let styles = {\n    zIndex: 10+layer\n  };\n  return styles;\n}\n\nfunction getPosition(index) {\n  let yOffset = Math.floor(index/3)*60;\n  let xOffset = (index%3)*60;\n  return {x: -150+xOffset, y: 50+yOffset};\n}\n\nfunction ObjectQ(props) {\n  const { name, width, height, index, onNavAdd, onNavRemove, navIndex, onUpdate,\n    layer, color, isRound, rotate, onObjectChange, position } = props;\n  const [editing, setEditing] = useState(false);\n  const inNav = navIndex !== -1;\n\n  const handleDragStop = (data) => {\n    if(data.x < 0){\n      onNavAdd(index);\n    }\n    onObjectChange(index, { inNav: data.x < 0, name, width, height, layer, color, isRound, rotate, position: data.x < 0 ? undefined : {x: data.x, y: data.y}});\n  }\n\n  const handleDragStart = (data) => {\n    if (inNav){\n      onNavRemove(index);\n    }\n  }\n\n  return (\n    <>\n      {editing?\n        <CreateObject \n          onCreate={(object) => {onUpdate(index, object);setEditing(false);}} \n          onClose={() => setEditing(false)}\n          isUpdate={true}\n          {...{ name, width, height, layer, color, isRound, rotate}}\n        />\n        : null\n      }\n      <div style={getLayerStyles(props)}>\n        <Draggable\n          onStart={(e, data) => handleDragStart(data)}\n          onStop={(e, data) => handleDragStop(data)}\n          position={inNav ? getPosition(navIndex) : position}\n        >\n          <div>\n            <div className=\"object\" style={getStyles(props, inNav)}>\n              <input\n                className=\"editButton\"\n                type=\"button\"\n                value=\"?\"\n                onClick={() => setEditing(true)}\n              />\n              {inNav ? null :\n                <input\n                  className=\"rotateButton\"\n                  type=\"button\"\n                  value=\"->\"\n                  onClick={() => onUpdate(index, { name, width, height, layer, color, isRound, rotate: rotate+90})}\n                />\n              }\n              {name}\n              <div className=\"bottomMiddle\">{`${width}x${height}`}</div>\n            </div>\n          </div>\n        </Draggable>\n      </div>\n    </>\n  );\n}\n\nexport default ObjectQ;\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport ObjectQ from './ObjectQ';\nimport CreateObject from './CreateObject';\nimport './App.css';\n\nfunction drawBoard(width, height, scale){\n\n  if(width == 0 || height == 0 || scale == 0)\n    return;\n\n  let canvas = document.getElementById('mainCanvas');\n  let context = canvas.getContext(\"2d\");\n\n  let windowWidth = window.innerWidth - 280;\n  let windowHeight = window.innerHeight - 240;\n\n  let squareSize = Math.min(windowWidth/width, windowHeight/height)*scale;\n\n  let canvasWidth = width * squareSize / scale;\n  let canvasHeight = height * squareSize / scale;\n\n  context.canvas.width  = canvasWidth;\n  context.canvas.height = canvasHeight;\n\n  for (let x = 0; x <= width/scale; x += 1) {\n    context.moveTo(x*squareSize+.5, 0);\n    context.lineTo(x*squareSize+.5, canvasHeight);\n  }\n  context.moveTo(canvasWidth-.5, 0);\n  context.lineTo(canvasWidth-.5, canvasHeight-.5);\n\n  for (let x = 0; x <= height/scale; x += 1) {\n    context.moveTo(0, x*squareSize+.5);\n    context.lineTo(canvasWidth, x*squareSize+.5);\n  }\n  context.moveTo(0, canvasHeight-.5);\n  context.lineTo(canvasWidth, canvasHeight-.5);\n\n  context.strokeStyle = \"black\";\n  context.stroke();\n\n  return squareSize / scale;\n}\n\nfunction App() {\n  const initialSaveState = useMemo(() => {\n    try {\n      return JSON.parse(window.localStorage.getItem(\"objectSaveState\")) || {\n        1: {\n        details: {name: \"room1\", size: {width: 10, height:10, scale: 1}},\n        objects: {}\n        }};\n    } catch {\n      return {1: {\n        details: {name: \"room1\", size: {width: 10, height:10, scale: 1}},\n        objects: {}\n      }};\n    }\n  }, []);\n\n  const objectSaveStateRef = useRef(initialSaveState);\n\n  const getObjectsFromSave = (idOfSave) => {\n    const saveState = objectSaveStateRef.current[idOfSave];\n    // if(!saveState || !Object.keys(saveState.objects).length){\n    //   return [[], []];\n    // }\n\n    const objects = [];\n    const nav = [];\n    const numObjects = Object.keys(saveState.objects).length;\n    for (let i = 0; i < numObjects; i++){\n      objects.push(saveState.objects[i]);\n      if(saveState.objects[i]?.inNav){\n        nav.push(i);\n      }\n    }\n\n    return [objects, nav];\n  }\n\n  const [width, setWidth] = useState(10);\n  const [height, setHeight] = useState(10);\n  const [scale, setScale] = useState(1);\n  const [squareSize, setSquareSize] = useState(0);\n  const [objects, setObjects] = useState([]);\n  const [creatingObject, setCreatingObject] = useState(false);\n  const [navArray, setNavArray] = useState([]);\n\n  const [saveIds, setSaveIds] = useState(initialSaveState[1] ? Object.keys(initialSaveState) : [1]);\n  const [saveId, setSaveId] = useState(1);\n  const [newRoomName, setNewRoomName] = useState(\"\");\n\n  useEffect(() => {\n    const [intialObjects, initialNav] = getObjectsFromSave(saveId);\n    setObjects(intialObjects);\n    setNavArray(initialNav);\n    // set room size\n    const roomSize = objectSaveStateRef.current[saveId]?.details?.size;\n    if(roomSize){\n      setWidth(roomSize.width);\n      setHeight(roomSize.height);\n      setScale(roomSize.scale);\n      setSquareSize(drawBoard(roomSize.width, roomSize.height, roomSize.scale))\n    }\n    else {\n      setSquareSize(drawBoard(width, height, scale));\n    }\n  }, [saveId]);\n\n  const handleObjectUpdate = (index, newObj) => {\n    let items = [...objects];\n    items[index] = newObj;\n    setObjects(items);\n  }\n\n  const updateRoomName = (newName) => {\n    const objectSaveState = objectSaveStateRef.current;\n    objectSaveState[saveId].details.name = newName;\n    window.localStorage.setItem(\"objectSaveState\", JSON.stringify(objectSaveState));\n    setNewRoomName(\"\");\n  }\n\n  const updateRoomSize = (newSize) => {\n    const objectSaveState = objectSaveStateRef.current;\n    objectSaveState[saveId].details.size = newSize;\n    window.localStorage.setItem(\"objectSaveState\", JSON.stringify(objectSaveState));\n    setNewRoomName(\"\");\n  }\n  \n  const updateObjectSaveState = (index, object) => {\n    const objectSaveState = objectSaveStateRef.current;\n    objectSaveState[saveId].objects[index] = object;\n    handleObjectUpdate(index, object);\n\n    window.localStorage.setItem(\"objectSaveState\", JSON.stringify(objectSaveState));\n  }\n\n  const getObjects = () => {\n    let objectComps = [];\n    let count = 0;\n    for (let object of objects){\n      objectComps.push(\n        <ObjectQ\n          onObjectChange={updateObjectSaveState}\n          position={object.position}\n          squareSize={squareSize}\n          width={object.width}\n          height={object.height}\n          layer={object.layer}\n          color={object.color}\n          name={object.name}\n          isRound={object.isRound}\n          index={count}\n          rotate={object.rotate}\n          onUpdate={(index, newObj) => handleObjectUpdate(index, newObj)}\n          navIndex={navArray.indexOf(count)}\n          onNavAdd={(objIndex) => setNavArray([...navArray, objIndex])}\n          onNavRemove={(objIndex) => {\n            const index = navArray.indexOf(objIndex);\n            if (index > -1) {\n              navArray.splice(index, 1);\n            }\n            setNavArray(navArray);\n          }}\n          key={`ObjectQ${count}`}\n        />\n      )\n      count++;\n    }\n    return objectComps;\n  }\n\n  const handleObjectCreate = (object) => {\n    const newObjectIndex = objects.length;\n    setObjects([...objects, object]);\n    setNavArray([...navArray, objects.length]);\n    updateObjectSaveState(newObjectIndex, {...object, inNav: true});\n  }\n\n  const getSaveIdButtons = () => {\n    return <select value={saveId} onChange={(e) => setSaveId(e.target.value)}>\n      {/* {saveIds.map(id => <button key={id} onClick={() => setSaveId(id)}>{objectSaveStateRef.current[id]?.details?.name ?? `room${id}`}</button>)} */}\n      {saveIds.map(id => <option key={id} value={id}>{objectSaveStateRef.current[id]?.details?.name ?? `room${id}`}</option>)}\n    </select>\n  }\n\n  const handleRoomCreate = () => {\n    const newSaveId = saveIds.length+1;\n\n    const objectSaveState = objectSaveStateRef.current;\n    if (!objectSaveState[newSaveId]){\n      objectSaveState[newSaveId] = {\n        details: {name: `room${newSaveId}`, size: {width: 10, height:10, scale: 1}},\n        objects: {}\n      };\n    }\n\n    setSaveIds([...saveIds, newSaveId]);\n    setSaveId(newSaveId);\n  }\n\n  return (\n    <div className=\"RoomLayout\">\n      {creatingObject ? \n        <CreateObject \n          onCreate={handleObjectCreate} \n          onClose={() => setCreatingObject(false)}\n        />\n        : null\n      }\n      <div className=\"sidebar\">\n        <div className=\"nav\">\n          <h2>Objects</h2>\n          <div>\n            <input\n              className=\"btn btn-secondary\"\n              disabled={creatingObject}\n              type=\"button\"\n              value=\"Create new object\"\n              onClick={() => setCreatingObject(true)}\n            />\n          </div>\n          {getObjects()}\n        </div>\n      </div>\n\n      <div className=\"main\">\n        <div>\n          {/* <h2>Room Layout</h2> */}\n          <div>\n            <span className=\"Label\">Width</span>\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={width}\n              onChange={(e) => setWidth(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n            />\n            <span className=\"Label\">Height</span>\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={height}\n              onChange={(e) => setHeight(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n            />\n            <span className=\"Label\">Scale</span>\n            <input\n              className=\"numBox\"\n              type=\"number\"\n              value={scale}\n              onChange={(e) => setScale(e.target.value === \"\" ? \"\" : parseFloat(e.target.value))}\n            />\n            <input\n              className=\"button\"\n              type=\"button\"\n              value=\"Resize Room\"\n              onClick={() => {updateRoomSize({width, height, scale}); setSquareSize(drawBoard(width, height, scale))}}\n            />\n          </div>\n          <div>\n            {getSaveIdButtons()}\n            <button className=\"button\" onClick={() => handleRoomCreate()} >New Room</button>\n            <input className=\"newRoomName\" placeholder='Room name' value={newRoomName} onChange={(e) => setNewRoomName(e.target.value)} />\n            <button className=\"button\" onClick={() => updateRoomName(newRoomName)} >Update Room Name</button>\n          </div>\n        </div>\n        <div>\n          <canvas id=\"mainCanvas\" className=\"mainCanvas\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const maxEntities = 3;\nconst maxDepth = 7;\n\nclass Quadtree {\n  myEntities = [];\n  containingEntityCount = 0;\n  subTrees = null;\n  x1;x2;y1;y2;\n  depth;\n\n  constructor(x1, y1, x2, y2, depth = 0) {\n    this.x1 = x1;\n    this.y1 = y1;\n    this.x2 = x2;\n    this.y2 = y2;\n    this.depth = depth;\n  }\n\n  drawAll = (context) => {\n    if (!this.subTrees) return;\n    const {x1,x2,x3,y1,y2,y3} = this.getxys();\n    context.moveTo(x2, y1);\n    context.lineTo(x2, y3);\n    context.moveTo(x1, y2);\n    context.lineTo(x3, y2);\n\n    this.subTrees.forEach(subTree => subTree.drawAll(context));\n  }\n\n  getEntityCount = () => {\n    return this.myEntities.length;\n  }\n\n  getEntities = () => {\n    return this.myEntities;\n  }\n\n  getAllEntities = () => {\n    if (!this.subTrees) return this.myEntities;\n    const entities = [];\n    this.subTrees.forEach(subTree => {\n      subTree.getAllEntities().forEach(entity => {\n        if (!entities.some(x => x.id == entity.id)) {\n          entities.push(entity);\n        }\n      });\n    });\n    return entities;\n  }\n\n  getNeighbourIds = (entity) => {\n    if(!this.subTrees){\n      return this.myEntities.map(x => x.id).filter(id => id != entity.id);\n    }\n    const subTreeIds = this.getSubTreeIds(entity);\n    const neighbourIds = [];\n\n    subTreeIds.forEach(id => {\n      let a = this.subTrees[id].getNeighbourIds(entity);\n      a.forEach(neighbourId => {\n        if (!neighbourIds.some(x => x == neighbourId)) {\n          neighbourIds.push(neighbourId);\n        }\n      });\n    });\n    return neighbourIds;\n  }\n\n  getSubtreePath (entity) {\n    if(!this.subTrees){\n      return [0];\n    }\n\n    const firstSubTreeId = this.getSubTreeIds(entity)[0];\n\n    let subTreePath = this.subTrees[firstSubTreeId].getSubtreePath(entity);\n    subTreePath.push(firstSubTreeId);\n    return subTreePath;\n  }\n\n  getxys = () => {\n    const x1 = this.x1;\n    const x2 = Math.floor((this.x1+this.x2)/2);\n    const x3 = this.x2;\n    const y1 = this.y1;\n    const y2 = Math.floor((this.y1+this.y2)/2);\n    const y3 = this.y2;\n    return {x1,x2,x3,y1,y2,y3};\n  }\n\n  createSubTrees = () => {\n    const {x1,x2,x3,y1,y2,y3} = this.getxys();\n    const subTrees = [];\n    subTrees.push(new Quadtree(x1,y1,x2,y2, this.depth + 1));\n    subTrees.push(new Quadtree(x2,y1,x3,y2, this.depth + 1));\n    subTrees.push(new Quadtree(x1,y2,x2,y3, this.depth + 1));\n    subTrees.push(new Quadtree(x2,y2,x3,y3, this.depth + 1));\n    return subTrees;\n  }\n\n  addEntity = (newEntity) => {\n    this.containingEntityCount++;\n    const entityCount = this.getEntityCount();\n    if((!this.subTrees && entityCount < maxEntities) || this.depth == maxDepth ){\n      this.myEntities.push(newEntity);\n      return;\n    }\n    if (!this.subTrees) {\n      this.subTrees = this.createSubTrees();\n      this.myEntities.forEach(entity => {\n        this.addEntityToSubTrees(entity);\n      });\n      this.myEntities = [];\n    }\n    this.addEntityToSubTrees(newEntity);\n  }\n\n  addEntityToSubTrees = (entity) => {\n    const subTreeIds = this.getSubTreeIds(entity);\n\n    subTreeIds.forEach(id => {\n      this.subTrees[id].addEntity(entity);\n    });\n  }\n\n  removeEntity = (entityToRemove) => {\n    this.containingEntityCount--;\n    if(!this.subTrees){\n      this.myEntities = this.myEntities.filter(x => x.id != entityToRemove.id);\n      return;\n    }\n    if (this.containingEntityCount == maxEntities) {\n      this.myEntities = [];\n      this.getAllEntities().forEach(entity => {\n        if (entity.id != entityToRemove.id)\n          this.myEntities.push(entity);\n      });\n      this.subTrees = null;\n    }\n    else\n      this.removeEntityFromSubTrees(entityToRemove);\n  }\n\n  removeEntityFromSubTrees = (entity) => {\n    const subTreeIds = this.getSubTreeIds(entity);\n\n    subTreeIds.forEach(id => {\n      this.subTrees[id].removeEntity(entity);\n    });\n  }\n\n  moveEntity = (entity, newLocation) => {\n    this.removeEntity(entity);\n    this.addEntity({...entity, ...newLocation});\n  }\n\n  getSubTreeIds = (entity) => {\n    const {x, y, radius} = entity;\n    const {x2, y2} = this.getxys();\n\n    const inLeft = x-radius < x2;\n    const inRight = x+radius > x2;\n    const inTop = y-radius < y2;\n    const inBottom = y+radius > y2;\n\n    const subTreeIds = [];\n    if (inLeft && inTop) subTreeIds.push(0);\n    if (inRight && inTop) subTreeIds.push(1);\n    if (inLeft && inBottom) subTreeIds.push(2);\n    if (inRight && inBottom) subTreeIds.push(3);\n\n    return subTreeIds;\n  }\n\n  toString = (pre = '') => {\n    let s = '';\n    s += `${pre}${this.containingEntityCount} | ${this.depth} | ${this.x1},${this.y1},${this.x2},${this.y2} | [${this.myEntities.map(x => x.id)}]\\n`;\n    this.subTrees && this.subTrees.forEach(qt => {\n      s += `${qt.toString(pre + '\\t')}`;\n    });\n    return s;\n  }\n}\n\nexport default Quadtree;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Quadtree from './Quadtree';\n\nconst createEntity = (id, x, y, radius) => ({id, x, y, radius});\n\nconst size = Math.floor(Math.min(window.innerWidth * 0.9, window.innerHeight * 0.9));\n\nlet tempqt = new Quadtree(0,0,size,size);\nlet tempEntities = [];\nlet directions = [];\nlet step = [];\nlet speed = 6;\n\nfunction setDots(numPoints, minRadius, maxRadius, setNumPoints) {\n  tempqt = new Quadtree(0,0,size,size);\n  tempEntities = [];\n  directions = [];\n  step = [];\n\n  let totalAttempts = 0;\n  for (let i = 0; i < numPoints; i++) {\n    totalAttempts++;\n    let radius = Math.floor(Math.random() * (maxRadius-minRadius))+minRadius;\n    let x = Math.floor(Math.random() * (size-2*radius))+radius;\n    let y = Math.floor(Math.random() * (size-2*radius))+radius;\n    if(Math.random() < .75){\n      x = Math.floor(Math.random() * (size/2-2*radius))+radius;\n    }\n    if(Math.random() < .75){\n      y = Math.floor(Math.random() * (size/2-2*radius))+radius;\n    }\n    let entity = createEntity(i,x,y,radius);\n    \n    tempqt.addEntity(entity);\n\n    const neighbourIds = tempqt.getNeighbourIds(entity);\n    const collisionOccured = neighbourIds.some(id => {\n      return areColliding(entity, tempEntities[id]);\n    });\n    if (collisionOccured) {\n      tempqt.removeEntity(entity);\n      if (totalAttempts >= Math.max(1000,numPoints*10)) {\n        numPoints = tempEntities.length;\n        setNumPoints && setNumPoints(numPoints);\n        break;\n      }\n      i--;\n      continue;\n    }\n    tempEntities.push(entity);\n  }\n\n  for (let i = 0; i < numPoints; i++){\n    let rn = Math.floor(Math.random() * 4);\n    directions.push(rn);\n    let xRatio = Math.random();\n    let stepX = Math.round(Math.sqrt(speed*speed*xRatio));\n    let stepY = Math.round(Math.sqrt(speed*speed*(1-xRatio)));\n    step.push({x: stepX, y: Math.max(stepY, 1)});\n  }\n}\n\nfunction drawBoard(qt){\n  let canvas = document.getElementById('mainCanvas');\n  if(!canvas) return;\n  let context = canvas.getContext(\"2d\");\n\n  const {x1,x3,y1,y3} = qt.getxys();\n  const canvasWidth = x3-x1;\n  const canvasHeight = y3-y1;\n\n  context.canvas.width = canvasWidth+1;\n  context.canvas.height = canvasHeight+1;\n  context.clearRect(0, 0, canvasWidth, canvasHeight);\n\n  context.moveTo(0, 0);\n  context.lineTo(canvasWidth, 0);\n  context.lineTo(canvasWidth, canvasHeight);\n  context.lineTo(0, canvasHeight);\n  context.lineTo(0, 0);\n\n  qt.drawAll(context);\n\n  context.strokeStyle = \"black\";\n  context.stroke();\n}\n\nfunction drawPoints(qt, entities, useMultiColor) {\n  let canvas = document.getElementById('pointsCanvas');\n  if(!canvas) return;\n  let context = canvas.getContext(\"2d\");\n\n  const {x1,x3,y1,y3} = qt.getxys();\n  const canvasWidth = x3-x1;\n  const canvasHeight = y3-y1;\n\n  context.canvas.width = canvasWidth+1;\n  context.canvas.height = canvasHeight+1;\n  context.clearRect(0, 0, canvasWidth, canvasHeight);\n  \n  const entity = tempEntities[0];\n  const neighbourIds = tempqt.getNeighbourIds(entity);\n\n  entities.forEach(entity => {\n    context.beginPath();\n    const {id, x, y, radius} = entity;\n    context.moveTo(x+radius, y);\n    context.arc(x, y, radius, 0, 2 * Math.PI);\n\n    let entityColor;\n\n    if (useMultiColor) {\n      const path = tempqt.getSubtreePath(entity);\n      seed = parseInt(path.join(''));\n      entityColor = getRandomColor();\n    }\n    else {\n      if(id == 0){\n        entityColor =  'rgba(255,0,255,0.9)';\n      }\n      else if (neighbourIds.includes(id)){\n        entityColor =  'rgba(0,255,0,0.9)';\n      }\n      else {\n        entityColor =  'rgba(255,0,0,0.9)';\n      }\n    }\n\n    context.fillStyle =  entityColor;\n    context.fill();\n  });\n}\n\nlet seed = 1;\n\nfunction getRandomColor() {\n  const colors = [];\n  for (let i = 0; i < 3; i++){\n    const x = Math.sin(seed++) * 10000;\n    colors.push(Math.floor((x-Math.floor(x))*255));\n  }\n  return `rgba(${colors[0]},${colors[1]},${colors[2]},0.9)`;\n}\n\nfunction areColliding(entity1, entity2) {\n  let x = Math.abs(entity2.x - entity1.x);\n  let y = Math.abs(entity2.y - entity1.y);\n  let dist = Math.sqrt(x**2 + y**2);\n  return dist < entity2.radius + entity1.radius;\n}\n\nfunction App() {\n  const [intervalId, setIntervalId] = useState(null);\n  const [numDots, setNumDots] = useState(50);\n  const [dotSpeed, setDotSpeed] = useState(16);\n  const [minRadius, setMinRadius] = useState(5);\n  const [maxRadius, setMaxRadius] = useState(8);\n  const [updates, setUpdates] = useState(0);\n  const [useMultiColor, setUseMulticolor] = useState(true);\n  useEffect(() => {\n    drawBoard(tempqt);\n    drawPoints(tempqt, tempEntities, useMultiColor);\n    setDots(numDots, minRadius, maxRadius);\n  }, []);\n\n  useEffect(() => {\n    intervalId != null && clearInterval(intervalId);\n    let newIntervalId = setInterval(() => {\n      if (!window.location.hash.endsWith('/collision-detection')){\n        clearInterval(newIntervalId);\n      }\n      let collidingEntityIds = {};\n      for (let i = 0; i < numDots; i++){\n        let entity = tempEntities[i];\n        const neighbourIds = tempqt.getNeighbourIds(entity);\n        neighbourIds.forEach(id => {\n          if(areColliding(entity, tempEntities[id])){\n            collidingEntityIds[entity.id] = id;\n            collidingEntityIds[id] = entity.id;\n          }\n        });\n      }\n      Object.keys(collidingEntityIds).forEach(id => {\n        let entity = tempEntities[id];\n        let collisionEntity = tempEntities[collidingEntityIds[id]];\n        let xDif = collisionEntity.x - entity.x;\n        let yDif = collisionEntity.y - entity.y;\n        let xRatio = Math.abs(xDif) / Math.max(1,(Math.abs(xDif)+Math.abs(yDif)));\n        let stepX = Math.round(Math.sqrt(speed*speed*xRatio));\n        let stepY = Math.round(Math.sqrt(speed*speed*(1-xRatio)));\n        step[id] = {x: stepX, y: stepY};\n        switch (true) {\n          case xDif < 0 && yDif < 0:\n            directions[id] = 2;\n            break;\n          case xDif < 0:\n            directions[id] = 1;\n            break;\n          case xDif > 0 && yDif > 0:\n            directions[id] = 0;\n            break;\n          case xDif > 0:\n            directions[id] = 3;\n            break;\n        }\n      });\n      for (let i = 0; i < numDots; i++){\n        let entity = tempEntities[i];\n        let stepX = step[i].x;\n        let stepY = step[i].y;\n        let newX = [1,2].includes(directions[i]) ? entity.x+stepX : entity.x-stepX;\n        let newY = [2,3].includes(directions[i]) ? entity.y+stepY : entity.y-stepY;\n        if (newX > size - entity.radius){\n          switch (directions[i]){\n            case 1:\n              directions[i] = 0;\n              break;\n            case 2:\n              directions[i] = 3;\n              break;\n          }\n        }\n        else if (newX < entity.radius){\n          switch (directions[i]){\n            case 0:\n              directions[i] = 1;\n              break;\n            case 3:\n              directions[i] = 2;\n              break;\n          }\n        }\n        if (newY > size - entity.radius){\n          switch (directions[i]){\n            case 2:\n              directions[i] = 1;\n              break;\n            case 3:\n              directions[i] = 0;\n              break;\n          }\n        }\n        else if (newY < entity.radius){\n          switch (directions[i]){\n            case 0:\n              directions[i] = 3;\n              break;\n            case 1:\n              directions[i] = 2;\n              break;\n          }\n        }\n        let newPoint = {x: newX, y: newY};\n        tempqt.moveEntity(entity, newPoint);\n        tempEntities[i] = {...entity, ...newPoint};\n      }\n      drawBoard(tempqt);\n      drawPoints(tempqt, tempEntities, useMultiColor);\n    }, 1000/dotSpeed);\n    setIntervalId(newIntervalId);\n  }, [dotSpeed, updates, useMultiColor]);\n\n  return (\n    <div className=\"Collision\">\n      <div className=\"wrapper\">\n        <canvas id=\"mainCanvas\" className=\"mainCanvas\" />\n        <canvas id=\"pointsCanvas\" className=\"pointsCanvas\" />\n      </div>\n      <div className=\"idWrapper\">\n        <div className=\"options\">\n          <label>Use multi-color</label>\n          <input className=\"idSelector\" type='checkbox' \n            checked={useMultiColor}\n            onChange={() => setUseMulticolor(!useMultiColor)}\n          />\n          <br /><br />\n          <label>Number of Dots</label>\n          <input className=\"idSelector\" type='number' \n            value={numDots}\n            onChange={(e) => setNumDots(e.target.value)}\n          />\n          <br /><br />\n          <label>Min Radius</label>\n          <input className=\"idSelector\" type='number' \n            value={minRadius}\n            onChange={(e) => {\n              let val = parseInt(e.target.value) || 0;\n              if (val < 1) val = 1;\n              setMinRadius(val);\n            }}\n          />\n          <br /><br />\n          <label>Max Radius</label>\n          <input className=\"idSelector\" type='number' \n            value={maxRadius}\n            onChange={(e) => {\n              let val = parseInt(e.target.value) || 0;\n              if (val < 1) val = 1;\n              setMaxRadius(val);\n            }}\n          />\n          <br /><br />\n          <label>Speed</label>\n          <input className=\"idSelector\" type='number' \n            value={dotSpeed}\n            onChange={(e) => setDotSpeed(e.target.value)}\n          />\n          <br /><br />\n          <input className=\"idSelector\" type='button' \n            value={'Go!'}\n            onClick={() => {setDots(numDots, minRadius, maxRadius, setNumDots);setUpdates(updates + 1)}}\n          />\n        </div>\n      </div>\n      <div className=\"qtExplanation\">\n        <div>To allow the balls to bounce off of each other, we must detect when they are colliding</div>\n        <div>But it is inefficient to check the collision for EACH pair of balls</div>\n        <div>To reduce the required collision checking as much as possible, we want to only check the collision for balls that are close to each other</div>\n        <div>We can divide the screen into 4 sections, and keep track of which balls are in which corner of the screen</div>\n        <div>We can then repeat the process and divide each quarter again, and again, and again</div>\n        <div>As a single square gets too many balls (more than 3) it will divide into 4 squares</div>\n        <br/>\n        <div>The visualization here shows which balls are being checked for collision with which others</div>\n        <div>For multi-color enabled: the balls of a matching color are being checked for collision</div>\n        <div>For multi-color disabled: the pink ball is being checked for collision with only the green ones</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Projects from './Projects';\nimport About from './About';\nimport Time from './Time';\nimport Snek from './Snek';\nimport RoomLayout from './RoomLayout/src/App';\nimport Collision from './Collision/src/App';\n// import Mastermind from './Mastermind';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"Body\">\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/absolute-time\" component={Time} />\n            <Route path=\"/snek\" component={() => <Snek isBasic />} />\n            <Route path=\"/snek-ai\" component={Snek} />\n            <Route path=\"/room-layout\" component={RoomLayout} />\n            <Route path=\"/collision-detection\" component={Collision} />\n            {/* <Route path=\"/picas-y-fijas\" component={Mastermind} /> */}\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n<HashRouter>\n  <App />\n</HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}